add_test([=[PlaneDetectorTest.DetectGroundPlane]=]  /Users/michaelhalloran/cube_edit/build_debug/bin/test_unit_core_input_plane_detector [==[--gtest_filter=PlaneDetectorTest.DetectGroundPlane]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[PlaneDetectorTest.DetectGroundPlane]=]  PROPERTIES WORKING_DIRECTORY /Users/michaelhalloran/cube_edit/build_debug/core/input/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[PlaneDetectorTest.DetectPlaneWithSingleVoxel]=]  /Users/michaelhalloran/cube_edit/build_debug/bin/test_unit_core_input_plane_detector [==[--gtest_filter=PlaneDetectorTest.DetectPlaneWithSingleVoxel]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[PlaneDetectorTest.DetectPlaneWithSingleVoxel]=]  PROPERTIES WORKING_DIRECTORY /Users/michaelhalloran/cube_edit/build_debug/core/input/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[PlaneDetectorTest.DetectPlaneWithMultipleVoxels]=]  /Users/michaelhalloran/cube_edit/build_debug/bin/test_unit_core_input_plane_detector [==[--gtest_filter=PlaneDetectorTest.DetectPlaneWithMultipleVoxels]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[PlaneDetectorTest.DetectPlaneWithMultipleVoxels]=]  PROPERTIES WORKING_DIRECTORY /Users/michaelhalloran/cube_edit/build_debug/core/input/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[PlaneDetectorTest.FindHighestVoxelUnderCursor]=]  /Users/michaelhalloran/cube_edit/build_debug/bin/test_unit_core_input_plane_detector [==[--gtest_filter=PlaneDetectorTest.FindHighestVoxelUnderCursor]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[PlaneDetectorTest.FindHighestVoxelUnderCursor]=]  PROPERTIES WORKING_DIRECTORY /Users/michaelhalloran/cube_edit/build_debug/core/input/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[PlaneDetectorTest.PlanePersistenceDuringOverlap]=]  /Users/michaelhalloran/cube_edit/build_debug/bin/test_unit_core_input_plane_detector [==[--gtest_filter=PlaneDetectorTest.PlanePersistenceDuringOverlap]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[PlaneDetectorTest.PlanePersistenceDuringOverlap]=]  PROPERTIES WORKING_DIRECTORY /Users/michaelhalloran/cube_edit/build_debug/core/input/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[PlaneDetectorTest.PlaneClearingWhenPreviewClears]=]  /Users/michaelhalloran/cube_edit/build_debug/bin/test_unit_core_input_plane_detector [==[--gtest_filter=PlaneDetectorTest.PlaneClearingWhenPreviewClears]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[PlaneDetectorTest.PlaneClearingWhenPreviewClears]=]  PROPERTIES WORKING_DIRECTORY /Users/michaelhalloran/cube_edit/build_debug/core/input/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[PlaneDetectorTest.DifferentVoxelSizes]=]  /Users/michaelhalloran/cube_edit/build_debug/bin/test_unit_core_input_plane_detector [==[--gtest_filter=PlaneDetectorTest.DifferentVoxelSizes]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[PlaneDetectorTest.DifferentVoxelSizes]=]  PROPERTIES WORKING_DIRECTORY /Users/michaelhalloran/cube_edit/build_debug/core/input/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[PlaneDetectorTest.VoxelTopHeightCalculation]=]  /Users/michaelhalloran/cube_edit/build_debug/bin/test_unit_core_input_plane_detector [==[--gtest_filter=PlaneDetectorTest.VoxelTopHeightCalculation]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[PlaneDetectorTest.VoxelTopHeightCalculation]=]  PROPERTIES WORKING_DIRECTORY /Users/michaelhalloran/cube_edit/build_debug/core/input/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[PlaneDetectorTest.PlaneTransitionLogic]=]  /Users/michaelhalloran/cube_edit/build_debug/bin/test_unit_core_input_plane_detector [==[--gtest_filter=PlaneDetectorTest.PlaneTransitionLogic]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[PlaneDetectorTest.PlaneTransitionLogic]=]  PROPERTIES WORKING_DIRECTORY /Users/michaelhalloran/cube_edit/build_debug/core/input/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[PlaneDetectorTest.VoxelsAtSpecificHeight]=]  /Users/michaelhalloran/cube_edit/build_debug/bin/test_unit_core_input_plane_detector [==[--gtest_filter=PlaneDetectorTest.VoxelsAtSpecificHeight]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[PlaneDetectorTest.VoxelsAtSpecificHeight]=]  PROPERTIES WORKING_DIRECTORY /Users/michaelhalloran/cube_edit/build_debug/core/input/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[PlaneDetectorTest.PreviewOverlapDetection]=]  /Users/michaelhalloran/cube_edit/build_debug/bin/test_unit_core_input_plane_detector [==[--gtest_filter=PlaneDetectorTest.PreviewOverlapDetection]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[PlaneDetectorTest.PreviewOverlapDetection]=]  PROPERTIES WORKING_DIRECTORY /Users/michaelhalloran/cube_edit/build_debug/core/input/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[PlaneDetectorTest.ResetFunctionality]=]  /Users/michaelhalloran/cube_edit/build_debug/bin/test_unit_core_input_plane_detector [==[--gtest_filter=PlaneDetectorTest.ResetFunctionality]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[PlaneDetectorTest.ResetFunctionality]=]  PROPERTIES WORKING_DIRECTORY /Users/michaelhalloran/cube_edit/build_debug/core/input/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[PlaneDetectorTest.EmptyWorkspace]=]  /Users/michaelhalloran/cube_edit/build_debug/bin/test_unit_core_input_plane_detector [==[--gtest_filter=PlaneDetectorTest.EmptyWorkspace]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[PlaneDetectorTest.EmptyWorkspace]=]  PROPERTIES WORKING_DIRECTORY /Users/michaelhalloran/cube_edit/build_debug/core/input/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[PlaneDetectorTest.VoxelAtBoundary]=]  /Users/michaelhalloran/cube_edit/build_debug/bin/test_unit_core_input_plane_detector [==[--gtest_filter=PlaneDetectorTest.VoxelAtBoundary]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[PlaneDetectorTest.VoxelAtBoundary]=]  PROPERTIES WORKING_DIRECTORY /Users/michaelhalloran/cube_edit/build_debug/core/input/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[PlaneDetectorTest.ComplexStackingScenario]=]  /Users/michaelhalloran/cube_edit/build_debug/bin/test_unit_core_input_plane_detector [==[--gtest_filter=PlaneDetectorTest.ComplexStackingScenario]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[PlaneDetectorTest.ComplexStackingScenario]=]  PROPERTIES WORKING_DIRECTORY /Users/michaelhalloran/cube_edit/build_debug/core/input/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
set(  test_unit_core_input_plane_detector_TESTS PlaneDetectorTest.DetectGroundPlane PlaneDetectorTest.DetectPlaneWithSingleVoxel PlaneDetectorTest.DetectPlaneWithMultipleVoxels PlaneDetectorTest.FindHighestVoxelUnderCursor PlaneDetectorTest.PlanePersistenceDuringOverlap PlaneDetectorTest.PlaneClearingWhenPreviewClears PlaneDetectorTest.DifferentVoxelSizes PlaneDetectorTest.VoxelTopHeightCalculation PlaneDetectorTest.PlaneTransitionLogic PlaneDetectorTest.VoxelsAtSpecificHeight PlaneDetectorTest.PreviewOverlapDetection PlaneDetectorTest.ResetFunctionality PlaneDetectorTest.EmptyWorkspace PlaneDetectorTest.VoxelAtBoundary PlaneDetectorTest.ComplexStackingScenario)
